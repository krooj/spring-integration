<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.krooj"/>

    <!-- Defines a logical channel for the input messages -->
    <int:channel id="fileInputChannel"/>

    <!-- Define a channel, backed by a queue, onto which to place the un-marshalled messages -->
    <int:channel id="convertedMessageChannel">
        <int:queue/>
    </int:channel>

    <int:channel id="lineItemProcessingChannel">
    </int:channel>


    <!-- Poll the target directory every 5 seconds for a file with the *csv extension -->
    <int-file:inbound-channel-adapter id="filePoller"
                                      channel="fileInputChannel"
                                      directory="file:/tmp/inbound_messages"
                                      filename-pattern="*.csv"
                                      prevent-duplicates="true">
        <int-file:nio-locker/>
        <int:poller fixed-rate="5000"/>
    </int-file:inbound-channel-adapter>


    <int:splitter input-channel="fileInputChannel"
                  output-channel="lineItemProcessingChannel"
                  expression="T(org.apache.commons.io.FileUtils).lineIterator(payload)">
    </int:splitter>

    <int:transformer input-channel="lineItemProcessingChannel"
                     output-channel="convertedMessageChannel"
                     ref="lineItemMessageTransformer"/>

    <int:service-activator ref="shoutOutService" method="handle" input-channel="convertedMessageChannel">
        <int:poller cron="0/5 * * * * ?"/>
    </int:service-activator>

</beans>