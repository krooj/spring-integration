<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
           http://www.springframework.org/schema/rabbit
           http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/integration/amqp
           http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd">

    <context:component-scan base-package="com.krooj"/>

    <!-- Defines a logical channel for the input messages -->
    <int:channel id="fileInputChannel"/>

    <int:channel id="amqpOutboundChannel"/>

    <int:channel id="amqpInboundChannel"/>

    <int:channel id="lineItemProcessingChannel">
    </int:channel>


    <!-- Poll the target directory every 5 seconds for a file with the *csv extension -->
    <int-file:inbound-channel-adapter id="filePoller"
                                      channel="fileInputChannel"
                                      directory="file:/tmp/inbound_messages"
                                      filename-pattern="*.csv"
                                      prevent-duplicates="true">
        <int-file:nio-locker/>
        <int:poller fixed-rate="5000"/>
    </int-file:inbound-channel-adapter>


    <int:splitter input-channel="fileInputChannel"
                  output-channel="lineItemProcessingChannel"
                  expression="T(org.apache.commons.io.FileUtils).lineIterator(payload)">
    </int:splitter>

    <int:transformer input-channel="lineItemProcessingChannel"
                     output-channel="amqpInboundChannel"
                     ref="lineItemMessageTransformer"/>

    <int-amqp:outbound-channel-adapter
            channel="amqpOutboundChannel" amqp-template="amqpTemplate" exchange-name="si.test.exchange"
            routing-key="si.test.binding" />

    <int-amqp:inbound-channel-adapter
        channel="amqpInboundChannel"
        queue-names="si.test.queue" connection-factory="connectionFactory" />

    <int:service-activator input-channel="amqpInboundChannel" ref="shoutOutService" method="handle"/>

    <!-- AMQP Configuration -->
    <rabbit:connection-factory id="connectionFactory" host="localhost" />

    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />

    <rabbit:admin connection-factory="connectionFactory" />

    <rabbit:queue name="si.test.queue" />

    <rabbit:direct-exchange name="si.test.exchange">
        <rabbit:bindings>
            <rabbit:binding queue="si.test.queue" key="si.test.binding" />
        </rabbit:bindings>
    </rabbit:direct-exchange>

</beans>